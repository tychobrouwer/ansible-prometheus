---
- name: Download Mimir executable
  ansible.builtin.get_url:
    url: "{{ prometheus_mimir_download_url }}"
    dest: "{{ prometheus_mimir_dir }}/mimir"
    owner: root
    group: root
    mode: "0755"
  notify: Restart Mimir

- name: Ensure Mimir symlink is created
  ansible.builtin.file:
    src: "{{ prometheus_mimir_dir }}/mimir"
    dest: /usr/local/bin/mimir
    state: link
    owner: root
    group: root

- name: Download Mimirtool executable
  ansible.builtin.get_url:
    url: "{{ prometheus_mimirtool_download_url }}"
    dest: "{{ prometheus_mimir_dir }}/mimirtool"
    owner: root
    group: root
    mode: "0755"

- name: Ensure Mimirtool symlink is created
  ansible.builtin.file:
    src: "{{ prometheus_mimir_dir }}/mimirtool"
    dest: /usr/local/bin/mimirtool
    state: link
    owner: root
    group: root

- name: Ensure Mimir config directory exists
  ansible.builtin.file:
    path: /etc/mimir/
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Ensure Mimir configuration templates are deployed on remote
  ansible.builtin.template:
    src: "{{ prometheus_mimir_template }}"
    dest: /etc/mimir/mimir.yml
    mode: "0644"
    owner: root
    group: root
  notify: Restart Mimir

- name: Ensure Mimir working directory exists
  ansible.builtin.file:
    path: /var/lib/mimir/
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Ensure Mimir service file is on remote
  ansible.builtin.template:
    src: mimir.service.j2
    dest: /etc/systemd/system/mimir.service
    mode: "0664"
    owner: root
    group: root
  notify: Restart Mimir

- name: Ensure Mimir service is enabled and started
  ansible.builtin.systemd:
    name: mimir
    state: started
    enabled: true
