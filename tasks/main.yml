---
# tasks file for prometheus
- name: Install and configure MinIO
  ansible.builtin.import_tasks: minio.yml
  when: prometheus_minio

- name: Install and configure Mimir
  ansible.builtin.import_tasks: mimir.yml
  when: prometheus_mimir

- name: Get latest version of Prometheus
  ansible.builtin.uri:
    url: "{{ prometheus_latest_url }}"
    return_content: true
  register: prometheus_latest

- name: Parse the JSON response to get the download URL for {{ prometheus_arch }}
  ansible.builtin.set_fact:
    linux_download_url: "{{ (prometheus_latest.json.assets | selectattr('browser_download_url', 'search', 'linux-' + prometheus_arch) | list | first).browser_download_url | default('') }}"
  when: prometheus_latest.json is defined

- name: Ensure Prometheus directory exists
  ansible.builtin.file:
    path: "{{ prometheus_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Download the latest version of Prometheus
  ansible.builtin.unarchive:
    src: "{{ linux_download_url }}"
    dest: "{{ prometheus_dir }}"
    remote_src: true
    mode: "0755"
    owner: root
    group: root
  notify: Restart Prometheus

- name: Get Prometheus binary path
  ansible.builtin.set_fact:
    prometheus_bin: "{{ linux_download_url.split('/')[-1].split('.tar.gz')[0] }}"

- name: Ensure Prometheus symlink is created
  ansible.builtin.file:
    src: "{{ prometheus_dir }}/{{ prometheus_bin }}/prometheus"
    dest: /usr/local/bin/prometheus
    state: link
    owner: root
    group: root

- name: Ensure Prometheus config directory exists
  ansible.builtin.file:
    path: /etc/prometheus/
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Ensure Prometheus configuration templates are deployed on remote
  ansible.builtin.template:
    src: "{{ prometheus_template }}"
    dest: /etc/prometheus/prometheus.yml
    mode: "0644"
    owner: root
    group: root
  notify: Restart Prometheus

- name: Ensure Prometheus rules templates are deployed on remote
  ansible.builtin.template:
    src: "{{ prometheus_rules_template }}"
    dest: /etc/prometheus/prometheus_rules.yml
    mode: "0644"
    owner: root
    group: root
  notify: Restart Prometheus

- name: Ensure Prometheus service file is on remote
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    mode: "0664"
    owner: root
    group: root
  notify: Restart Prometheus

- name: Ensure prometheus service is enabled and started
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true

- name: Install Prometheus PVE Exporter
  ansible.builtin.import_tasks: pve-exporter.yml
  when: prometheus_pve_exporter
